<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>radio on Ryan Tolboom</title>
    <link>https://using.tech/tags/radio/</link>
    <description>Recent content in radio on Ryan Tolboom</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Sun, 23 Feb 2025 00:00:00 +0000</lastBuildDate><atom:link href="https://using.tech/tags/radio/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Fox Hunt Mode for the AIOC</title>
      <link>https://using.tech/posts/aioc-fox/</link>
      <pubDate>Sun, 23 Feb 2025 00:00:00 +0000</pubDate>
      
      <guid>https://using.tech/posts/aioc-fox/</guid>
      <description>AIOC If you’re not familiar with the All in one Cable (AIOC), it’s a great project that uses a microcontroller, a Kenwood type connector, and a USB-C port to interface with an HT. The device presents itself on the USB bus as separate audio, serial, and HID devices. This means that with this one cable, you can:
program the radio (CHIRP, etc.)
send/receive audio from the radio
control the PTT</description>
    </item>
    
    <item>
      <title>Doppler Spread: It&#39;s the Small Things</title>
      <link>https://using.tech/posts/small/</link>
      <pubDate>Tue, 21 Nov 2023 00:00:00 +0000</pubDate>
      
      <guid>https://using.tech/posts/small/</guid>
      <description>Overview Rob Robinett, AI6VN, recently reached out to me to let me know that he was seeing Doppler spreads of zero for some signals using the wsprd.c patch I wrote. I’d never seen that before, so Rob sent me a WAV file with some very, very clean signals that yielded a Doppler spread of zero. After taking a look at how they were processed, I learned a little bit more about why you have to pay particular attention to the FST4 algorithm for small Doppler spreads.</description>
    </item>
    
    <item>
      <title>Calculating Doppler Spread from WSPR Data</title>
      <link>https://using.tech/posts/wspr-spread/</link>
      <pubDate>Wed, 01 Nov 2023 00:00:00 +0000</pubDate>
      
      <guid>https://using.tech/posts/wspr-spread/</guid>
      <description>Purpose After examining the Doppler spread (w50) algorithm from FST4 and trying to understand how wpsrd works I decided to take the plunge and see if I could calculate Doppler spread from WSPR data. My initial idea was to use the c2 files created by wsprd as a data source. Thanks to the wsjtx-devel list, I soon discovered c2 files didn’t have the data I thought they did.
So what I ended up implementing is a Python program that takes a WAV file as well as the wsprd output and calculates the Doppler spread for each decoded signal.</description>
    </item>
    
    <item>
      <title>Dissecting wsprd</title>
      <link>https://using.tech/posts/dissecting-wsprd/</link>
      <pubDate>Sun, 09 Jul 2023 00:00:00 +0000</pubDate>
      
      <guid>https://using.tech/posts/dissecting-wsprd/</guid>
      <description>Purpose The goal of this article is to pick apart exactly how wsprd works. There seems to be plenty of things written about the WSPR encoding process, less things written about the decoding process, and frankly not a whole lot about how the tool bundled with WSJT-X actually does it. So in the UTSL spirit, I present a dissection of wsprd.
I will point out that this is going to be a lengthy article, feel free to take it in chunks.</description>
    </item>
    
    <item>
      <title>FST4 Doppler Spread Algorithm in WSJT-X</title>
      <link>https://using.tech/posts/fst4/</link>
      <pubDate>Tue, 21 Mar 2023 00:00:00 +0000</pubDate>
      
      <guid>https://using.tech/posts/fst4/</guid>
      <description>At HamSCI 2023 this past weekend I was lucky enough to be able to attend Gwyn Griffiths&amp;#39; (G3ZIL) Identifying 14 MHz Propagation Modes Using FST4W SNR and Spectral Spread and Rob Robinett’s (AI6VN) Low Cost, High Accuracy and Stability FST4W Transmissions Using the QDX Transceiver presentations. After the presentation I was able to talk to Rob at his demo. He brought up the idea that if WSPR could calculate Doppler spread the same way FSTW4 calculates it, it might provide some useful data from people that didn’t want to start using FST4 but still wanted to run WSPR nodes.</description>
    </item>
    
  </channel>
</rss>
